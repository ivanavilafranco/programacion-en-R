c(1,2,3,4,5) -> datos
class(datos)
class(datos)
prueba<-scan()
class(prueba)
prueba<-scan(what = 'character')
class(prueba)
2000:2022
c(2000:2022) -> annos
class(annos)
prueba[3]
annos>=2005
annos[annos>=2005]
max(annos)
factor(annos)
orderer(annos)
ordered(annos)
c(2.6,2.7,1.5,2.1,1.7,1.7,2.3,2.1,2.2,1.9,2.7,1.6,1.4,2.1,1.4,1,2.6,2.5,1,2.6,0.6,1.8,1.5,2.8,2.3,2.9,1,2.1,1.1,0.3,0.7,2.6,1,1.8,1.9,2,1.4,2.1,2,2.4,1.5,2.7,1.7,2,2.8,3,1.5,2.6,1.7) -> prueba1
c(4.3,3.7,2.4,3.8,1.7,2.2,3.4,3.4,3.1,1.9,4.1,3.8,1.5,1.4,0.3,2.1,6,3,1.4,2.3,1.2,1.6,3.4,2.1,1.2,4.3,0.8,3.3,4.2,0.4,1,1.7,1.1,3,1.5,3.8,1.6,2.8,2,3.5,1.1,3.6,3.6,3.2,6.1,5.2,7.3,6.1,8) -> prueba2
lenght(prueba1)
length(prueba1)
length(prueba2)
sum(prueba1)
sum(prueba1,prueba2) <- notas
sum(prueba1,prueba2) -> notas
sum(prueba2)
notas
prueba1 + prueba 2 -> notas
prueba1+prueba 2 -> notas
prueba1 + prueba 2
prueba1 + prueba2
prueba1 + prueba2 -> notas
notas
colSums(rbind(prueba1,prueba2)) -> notas
notas
prueba1
c(2.6,2.7,1.5,2.1,1.7,1.7,2.3,2.1,2.2,1.9,2.7,1.6,1.4,2.1,1.4,1,2.6,2.5,1,2.6,0.6,1.8,1.5,2.8,2.3,2.9,1,2.1,1.1,0.3,0.7,2.6,1,1.8,1.9,2,1.4,2.1,2,2.4,1.5,2.7,1.7,2,2.8,3,1.5,2.6,1.7) -> prueba1
prueba1
prueba1 + prueba 2 -> notas
prueba1 + prueba2 -> notas
notas
mean(notas)
max(notas)
which.max(notas)
notas2 <- append(notas, 7.3)
notas2
notas2 + 1
notas 2 -> notas2 + 0.5
notas3 -> notas2 + 0.5
notas2 + 0.5 -> notas3
notas3
append(notas, 7.3) -> notas2
notas2
notas3 > 10
notas3 > 10 = 10
notas3 [> 10] = 10
notas3[> 10] = 10
notas3[> 10]
notas3 > 10
replace (notas3, notas3>10, 10)
notas3
replace (notas3, notas3>10, 10) -> notas4
notas4
sort(notas4)
sort(notas4) -> notas_ord
notas_ord
notas_ord => 5
notas_ord >= 5
notas_ord >= 5 -> califica
califica
factor(califica) -> calificacion
calificacion
levels(calificacion)<-c('Suspenso','Aprobado')
calificacion
mean(notas_ord)
notas_ord => 5
notas_ord >= 5
which(notas_ord>=5)
notas_ord(notas_ord>=5)
notas_ord>=5
[notas_ord>=5]
notas_ord[notas_ord>=5]
count(notas_ord[notas_ord>=5])
length(count(notas_ord[notas_ord>=5]))
length(notas_ord[notas_ord>=5]
length(notas_ord[notas_ord>=5])
length(notas_ord[notas_ord<5])
tail(sort(notas_ord),8)
c(1,2)
install.packages("languageserver")
library(languageserver)
install.packages(c("pxR", "readxl", "readODS", "foreign", "tabulizer"))
install.packages("tabulizer")
install.packages("writexl")
install.packages("rgdal")
library(writexl)
install.packages("rgdal")
library(rgdal)
detach("package:rgdal", unload = TRUE)
m <- matrix(1:4, 2)
m
prop.table(m, 1)
prop.table(m, 2)
library(readr)
fechas <- read_csv("GitHub/cursoR/UD3/archivos_ejemplo/fechas.csv")
View(fechas)
substr(fechas$FNAC,1,4)->fechas$anno
substr(fechas$FNAC,5,6)->fechas$mes
substr(fechas$FNAC,7,8)->fechas$dia
grep('1978',fechas$FNAC)
fechas <- read_csv("GitHub/cursoR/UD3/archivos_ejemplo/fechas.csv")
load(‘Ejercicio_texto.RData’)
load("Ejercicio_texto.RData")
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD3/ejercicios/Ejercicio_texto.RData")
View(Ejercicio_texto)
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('SE,'Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('SE,'Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
help8sub)
help(sub)
gsubfn
stringi
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('SE,'Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('SE,'Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
View(Ejercicio_texto)
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD3/ejercicios/Ejercicio_texto.RData")
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia %>% sub('SE','Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('CO','Córdoba',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('GR','Granada',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('HU','Huelva',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('JA','Jaén',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('MA','Málaga',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia & sub('SE','Sevilla',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia && sub('CA','Cádiz',Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
sub('AL','Almería',sub('CA','Cádiz',Ejercicio_texto$Provincia))->Ejercicio_texto$Provincia
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD3/ejercicios/Ejercicio_texto.RData")
View(Ejercicio_texto)
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
sub('AL','Almería',sub('CA','Cádiz',sub('CO','Córdoba',sub('GR','Granada',sub('HU','Huelva',sub('JA','Jaén',sub('MA','Málaga',sub('SE','Sevilla',Ejercicio_texto$Provincia))))))))->Ejercicio_texto$Provincia
str(Ejercicio_texto)
as.factor(Ejercicio_texto$Provincia)
str(Ejercicio_texto)
as.factor(Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
str(Ejercicio_texto)
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD3/ejercicios/Ejercicio_texto.RData")
#1. Cargar el fichero Ejercicio_texto.Rdata
load("Ejercicio_texto.RData")
#2. Extraer el código de la provincia del campo Código del expediente y almacenarlo en el mismo data frame en una columna llamada Provincia
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
#3. En la nueva variable creada, sustituir todas las abreviaturas de las provincias por el nombre completo de cada una de ellas
sub('AL','Almería',sub('CA','Cádiz',sub('CO','Córdoba',sub('GR','Granada',sub('HU','Huelva',sub('JA','Jaén',sub('MA','Málaga',sub('SE','Sevilla',Ejercicio_texto$Provincia))))))))->Ejercicio_texto$Provincia
#4. Cambiar la variable a tipo factor
as.factor(Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
View(Ejercicio_texto)
#1. Cargar el fichero Ejercicio_texto.Rdata
load("Ejercicio_texto.RData")
#2. Extraer el código de la provincia del campo Código del expediente y almacenarlo en el mismo data frame en una columna llamada Provincia
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
#3. En la nueva variable creada, sustituir todas las abreviaturas de las provincias por el nombre completo de cada una de ellas
sub('AL','Almería',sub('CA','Cádiz',sub('CO','Córdoba',sub('GR','Granada',sub('HU','Huelva',sub('JA','Jaén',sub('MA','Málaga',sub('SE','Sevilla',Ejercicio_texto$Provincia))))))))->Ejercicio_texto$Provincia
#4. Cambiar la variable a tipo factor
as.factor(Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD3/ejercicios/Ejercicio_texto.RData")
View(Ejercicio_texto)
#1. Cargar el fichero Ejercicio_texto.Rdata
load("Ejercicio_texto.RData")
#2. Extraer el código de la provincia del campo Código del expediente y almacenarlo en el mismo data frame en una columna llamada Provincia
substr(Ejercicio_texto$Cod_Expediente,4,5)->Ejercicio_texto$Provincia
#3. En la nueva variable creada, sustituir todas las abreviaturas de las provincias por el nombre completo de cada una de ellas
sub('AL','Almería',sub('CA','Cádiz',sub('CO','Córdoba',sub('GR','Granada',sub('HU','Huelva',sub('JA','Jaén',sub('MA','Málaga',sub('SE','Sevilla',Ejercicio_texto$Provincia))))))))->Ejercicio_texto$Provincia
#4. Cambiar la variable a tipo factor
as.factor(Ejercicio_texto$Provincia)->Ejercicio_texto$Provincia
load("~/GitHub/cursoR/UD3/ejercicios/Paro_por_municipios_2006_csv.csv")
Paro_por_municipios_2006_csv <- read.csv("~/GitHub/cursoR/UD3/ejercicios/Paro_por_municipios_2006_csv.csv", sep=";")
View(Paro_por_municipios_2006_csv)
load("~/GitHub/cursoR/UD3/ejercicios/Paro_por_municipios_2006_csv.csv")
Paro_por_municipios_2006_csv <- read.csv("~/GitHub/cursoR/UD3/ejercicios/Paro_por_municipios_2006_csv.csv", sep=";", skip="1")
View(Paro_por_municipios_2006_csv)
subset(Paro_por_municipios_2006_csv,Comunidad.Autónoma==Andalucía)
subset(Paro_por_municipios_2006_csv,Comunidad.Autónoma==Andalucía,1:20)
subset(Paro_por_municipios_2006_csv,Comunidad.Autónoma==Andalucía,1:20)
subset(Paro_por_municipios_2006_csv,Comunidad.Autónoma=='Andalucía',1:20)
subset(Paro_por_municipios_2006_csv,Comunidad.Autónoma=='Andalucía',1:20)->Paro_Andalucia
View(Paro_Andalucia)
Paro_Andalucia$Paro.total.hombres<-Paro_Andalucia$Paro.hombre.edad...25+Paro_Andalucia$Paro.hombre.edad...45+Paro_Andalucia$Paro.hombre.edad.25..45
Paro_Andalucia$Paro.total.mujeres<-Paro_Andalucia$Paro.mujer.edad...25+Paro_Andalucia$Paro.mujer.edad...45+Paro_Andalucia$Paro.mujer.edad.25..45
Paro_Andalucia_2<-Paro_Andalucia[,-c(1:4,9:20)]
View(Paro_Andalucia_2)
Paro_Andalucia_2<-Paro_Andalucia[,-c(1:4,10:20)]
names(Paro_Andalucia_2)[5]<-'Total'
aggregate(cbind(Total,Paro.total.hombres,Paro.total.mujeres)~Provincia,fun=SUM,data=Paro_Andalucia_2)
aggregate(cbind(Total,Paro.total.hombres,Paro.total.mujeres)~Provincia,FUN=sum,data=Paro_Andalucia_2)
aggregate(cbind(Total,Paro.total.hombres,Paro.total.mujeres)~Provincia,FUN=sum,data=Paro_Andalucia_2)->Paro_Andalucia_Provincias
View(Paro_Andalucia_Provincias)
Paro_por_municipios_2006_csv <- read.csv("Paro_por_municipios_2006_csv.csv", sep=";", skip="1")
> View(Paro_por_municipios_2006_csv)
substr('12-09-2014',4,5)
library(RODBC)
ruta<-'C:\\Users\\alfonsol.montejo\\Documents\\GitHub\\cursoR\\UD5\\archivos_ejemplo\\Datos_territoriales.mdb'
odbcConnectAccess(ruta)
odbcConnectAccess(ruta)->BD
sqlTables(BD)
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
install.packages("rmarkdown")
library(rmarkdown)
print('Gracias Juan de Dios por el curso')
load("C:/Users/alfonsol.montejo/Documents/GitHub/cursoR/UD5/ejercicio/tarjetas_black.RData")
setwd("~/GitHub/cursoR/UD5/ejercicio")
load("tarjetas_black.RData")
library(dplyr)
View(movimientos)
View(usuarios)
load("tarjetas_black.RData")
library(dplyr)
select(movimientos,c(comercio,importe))%>%
group_by(comercio)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_compelta,importe))%>%
group_by(comercio)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe) .groups = comercio)%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = comercio)%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe))%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'comercio')%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'rowwise')%>%
arrange(desc(importe))%>%
top_n(10,importe)
select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
comerciosblack<-select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
View(comerciosblack)
library(dplyr)
comerciosblack<-select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'keep')%>%
arrange(desc(importe))%>%
top_n(10,importe)
comerciosblack<-select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
ggplot(actividad_completa,importe(Actividad,Importe))+
geom_bar(stat='identity')
ggplot(comerciosblack$actividad_completa,comerciosblack$importe(Actividad,Importe))+
geom_bar(stat='identity')
ggplot(comerciosblack,aes(actividad_completa,importe))+
geom_bar(stat='identity')
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')
theme_bw()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
theme_bw()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
theme_dark()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
theme_dark()+
facet_grid(importe)
ggplot(comerciosblack,aes(importe,actividad_completa,fill=importe))+
geom_bar(stat='identity')+
theme_dark()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_brewer(palette="Dark2")+
theme_dark()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_brewer(palette="Dark2")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_brewer(palette="Greens")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_color_viridis(option = "D")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_brewer(palette = "Dark2")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_brewer(palette = "Greens")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
bp + scale_fill_jco()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity')+
scale_fill_jco()
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity', fill="#FF9999", colour="black")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity', fill="#FF9999")
ggplot(comerciosblack,aes(importe,actividad_completa))+
geom_bar(stat='identity', fill="#0072B2")
ggplot(comerciosblack,aes(importe,actividad_completa))+
xlab(Importe)+
ylab(Actividad)+
geom_bar(stat='identity', fill="#0072B2")
ggplot(comerciosblack,aes(importe,actividad_completa))+
xlab("Importe")+
ylab("Actividad")+
geom_bar(stat='identity', fill="#0072B2")
#Con el archivo de datos tarjetas_black.RData obtener una tabla con los diez comercios donde más dinero se ha gastado en total
load("tarjetas_black.RData")
library(dplyr)
comerciosblack<-select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
#Realizamos un gráfico con los resultados
library(ggplot2)
ggplot(comerciosblack,aes(importe,actividad_completa))+
xlab("Importe")+
ylab("Actividad")+
geom_bar(stat='identity', fill="#0072B2")
#Agradecimiento
print('Gracias Juan de Dios por el curso')
setwd("~/GitHub/cursoR/UD5/ejercicio")
#Con el archivo de datos tarjetas_black.RData obtener una tabla con los diez comercios donde más dinero se ha gastado en total
load("tarjetas_black.RData")
library(dplyr)
comerciosblack<-select(movimientos,c(comercio,actividad_completa,importe))%>%
group_by(comercio,actividad_completa)%>%
summarise(importe=sum(importe), .groups = 'drop')%>%
arrange(desc(importe))%>%
top_n(10,importe)
#Realizamos un gráfico con los resultados
library(ggplot2)
ggplot(comerciosblack,aes(importe,actividad_completa))+
xlab("Importe")+
ylab("Actividad")+
geom_bar(stat='identity', fill="#0072B2")
#Agradecimiento
print('Gracias Juan de Dios por el curso')
View(comerciosblack)
