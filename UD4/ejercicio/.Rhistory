emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
emigraciones_mun <- read_excel("./migraciones_mun.xlsx", sheet = "emigraciones")
emigraciones_mun <- read_excel(".\migraciones_mun.xlsx", sheet = "emigraciones")
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
emigraciones_mun <- read_excel('migraciones_mun.xlsx', sheet = "emigraciones")
setwd("~/GitHub/cursoR/UD4/ejercicio")
emigraciones_mun <- read_excel('migraciones_mun.xlsx', sheet = "emigraciones")
library(readxl)
emigraciones_mun <- read_excel("GitHub/cursoR/UD4/ejercicio/migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("GitHub/cursoR/UD4/ejercicio/migraciones_mun.xlsx", sheet = "inmigraciones")
setwd("~/GitHub/cursoR/UD4/ejercicio")
library(readxl)
emigraciones_mun <- read_excel("GitHub/cursoR/UD4/ejercicio/migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("GitHub/cursoR/UD4/ejercicio/migraciones_mun.xlsx", sheet = "inmigraciones")
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
View(inmigraciones_mun)
View(inmigraciones_mun)
View(emigraciones_mun)
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
View(migraciones)
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
for(i in 1:nrow(migraciones)){
if(Saldo>0){migraciones$Cod_Saldo == 2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo>0){migraciones$Cod_Saldo == 2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo>0){migraciones$Cod_Saldo = 2}
}
for(i in 1:nrow(migraciones)){
if(Saldo>0){migraciones$Cod_Saldo<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}
}
migraciones$Cod_Saldo<-2
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
View(migraciones)
View(migraciones)
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
View(migraciones)
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo<0){migraciones$Cod_Saldo<-1}
if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}
if(migraciones$Saldo=0){migraciones$Cod_Saldo<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo<0){migraciones$Cod_Saldo<-1}
else(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}
else(migraciones$Saldo=0){migraciones$Cod_Saldo<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo<0){migraciones$Cod_Saldo<-1}
else {if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}}
else {if(migraciones$Saldo=0){migraciones$Cod_Saldo<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo<0){migraciones$Cod_Saldo<-1}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo<0){migraciones$Cod_Saldo<-1}
else {if(migraciones$Saldo>0){migraciones$Cod_Saldo<-2}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo<-1}
else {if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo<-2}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo[i]<-2}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo[i]<-2}}
else {if(migraciones$Saldo[i]=0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo[i]<-2}}
also {if(migraciones$Saldo[i]=0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i]=0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i]<0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i]>0){migraciones$Cod_Saldo[i]<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else (migraciones$Saldo=0){migraciones$Cod_Saldo<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else (migraciones$Saldo=0){migraciones$Cod_Saldo<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if (migraciones$Saldo=0){migraciones$Cod_Saldo<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] = 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else (migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
break
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
break
}
View(migraciones)
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else (migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else break
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else stop ()
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {migraciones$Cod_Saldo[i]<-NA}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {migraciones$Cod_Saldo[i]<-NA}
}for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {migraciones$Cod_Saldo[i]<-'NA'}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {print(i)}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
}
quit
x
a
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al d
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}}
}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
View(migraciones)
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1} next
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {migraciones$Cod_Saldo[i]<-3}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {migraciones$Cod_Saldo[i]<-3}
}
View(migraciones)
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else (migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else {
if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else {migraciones$Cod_Saldo[i]<-3}
}
}
for (i in 1: nrow(migraciones)) {
if (migraciones$Saldo[i] < 0) {
migraciones$Cod_Saldo[i]<-1
} else {
if (migraciones$Saldo[i] > 0) {
migraciones$Cod_Saldo[i]<-2
} else {
migraciones$Cod_Saldo[i]<-3
}
}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else {migraciones$Cod_Saldo[i]<-4}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else next
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.null(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-NA}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.null(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-4}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.null(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'NA'}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'NA'}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-4}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
else if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'-'}
}
for(i in 1:nrow(migraciones)){
if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'-'}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
for(i in 1:nrow(migraciones)){
if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'-'}
else if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'-'}
else if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
#1. Cargar en RStudio la información de la hoja Excel llamada migraciones_mun.xls, creando dos data frames distintos denominados emigraciones e inmigraciones
library(readxl)
emigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "emigraciones")
inmigraciones_mun <- read_excel("migraciones_mun.xlsx", sheet = "inmigraciones")
#2. Unir los data frame de manera correcta (con la información común en los dos) en un único data frame llamado migraciones
migraciones<-merge(inmigraciones_mun,emigraciones_mun,all=T)
#3. Añadir una nueva variable al data frame que se llame Saldo como diferencia entre inmigrantes y emigrantes.
migraciones$Saldo<-migraciones$Inmigraciones-migraciones$Emigraciones
#4. Añadir una nueva variable al data frame llamada Cod_Saldo que codifique la variable Saldo de la siguiente manera: 1 si el municipio tiene saldo negativo, 2 si el municipio tiene saldo positivo y 3 si el municipio tiene saldo cero
for(i in 1:nrow(migraciones)){
if(is.na(migraciones$Saldo[i])){migraciones$Cod_Saldo[i]<-'-'}
else if(migraciones$Saldo[i] < 0){migraciones$Cod_Saldo[i]<-1}
else if(migraciones$Saldo[i] > 0){migraciones$Cod_Saldo[i]<-2}
else if(migraciones$Saldo[i] == 0){migraciones$Cod_Saldo[i]<-3}
}
View(migraciones)
install.packages("RODBC")
library(RODBC)
ruta<-'C:\Users\alfonsol.montejo\Documents\GitHub\cursoR\UD5\archivos_ejemplo\Datos_territoriales.mdb'
ruta<-'C:\\Users\\alfonsol.montejo\\Documents\\GitHub\\cursoR\\UD5\\archivos_ejemplo\\Datos_territoriales.mdb'
odbcConnectAccess(ruta)
